<?php

/**
 * @file
 * The ICCWC module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\search_api\Query\QueryInterface;

/**
 * Implements hook_theme().
 */
function iccwc_theme($existing, $type, $theme, $path) {
  return [
    'social_media_links' => [
      'variables' => [
        'twitter_link' => '',
        'youtube_link' => '',
        'linkedin_link' => '',
      ],
    ],
    'social_media_share' => [
      'variables' => [
        'link' => '',
      ],
    ],
    'more_links' => [
      'variables' => [
        'links' => [],
      ],
    ],
    'banner_block' => [
      'variables' => [
        'summary' => '',
        'title' => '',
        'breadcrumb' => '',
        'caption' => '',
        'image' => '',
        'tag' => '',
        'date' => '',
        'bundle' => '',
        'search_form' => '',
      ],
    ],
    'related_content' => [
      'variables' => [
        'related_content_view' => '',
        'see_more_text' => '',
        'see_more_link' => '',
      ],
    ],
    'success_stories' => [
      'variables' => [
        'featured_story' => '',
        'success_stories' => '',
      ],
    ],
    'latest_news' => [
      'variables' => [
        'featured_news' => '',
        'latest_news' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function iccwc_page_attachments(array &$attachments) {
  // Add custom CSS to admin pages.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    $attachments['#attached']['library'][] = 'iccwc/admin';
  }
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function iccwc_entity_base_field_info_alter(&$base_field_definitions, EntityTypeInterface $entity_type) {
  // Make uid and created fields be visible in Managed display.
  if ($entity_type->id() == 'node') {
    $fields = ['created', 'uid'];
    foreach ($fields as $field) {
      $base_field_definitions[$field]->setDisplayConfigurable('view', TRUE)
        ->setDisplayOptions('view', ['region' => 'hidden']);
    }
  }
}

/**
 * Implements hook_entity_type_build().
 */
function iccwc_entity_type_build(array &$entity_types) {
  // Make uid and created fields be visible in Managed display.
  if (isset($entity_types['node'])) {
    $entity_types['node']->set('enable_base_field_custom_preprocess_skipping', TRUE);
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for layout_builder_configure_block.
 */
function iccwc_form_layout_builder_configure_block_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\layout_builder\SectionComponent $component */
  $component = $form_object->getCurrentComponent();
  array_unshift($form['#submit'], '_iccwc_form_layout_builder_configure_block_submit');

  $form['settings']['border'] = [
    '#type' => 'checkbox',
    '#title' => t('Add a border around the block'),
    '#default_value' => $component->getThirdPartySetting('iccwc', 'border') ?? FALSE,
  ];

  $form['settings']['centered'] = [
    '#type' => 'checkbox',
    '#title' => t('Centered content'),
    '#default_value' => $component->getThirdPartySetting('iccwc', 'centered') ?? FALSE,
  ];
}

/**
 * Layout builder configure block submit.
 */
function _iccwc_form_layout_builder_configure_block_submit($form, FormStateInterface $form_state) {
  /** @var \Drupal\layout_builder\SectionComponent $section_component */
  $section_component = $form_state->getFormObject()->getCurrentComponent();
  $section_component->setThirdPartySetting('iccwc', 'border', $form_state->getValue('settings')['border'] ?? 0);
  $section_component->setThirdPartySetting('iccwc', 'centered', $form_state->getValue('settings')['centered'] ?? 0);
}

/**
 * Implements hook_search_api_query_alter().
 */
function iccwc_search_api_query_alter(QueryInterface $query) {
  /** @var \Drupal\iccwc\ICCWCManager $iccwc_manager */
  $iccwc_manager = \Drupal::service('iccwc.manager');
  if ($iccwc_manager->isNewsPage()) {
    $query->addCondition('type', 'news');
  }
}

/**
 * Implements hook_preprocess_field().
 */
function iccwc_preprocess_field(&$variables) {
  if ($variables['element']['#field_name'] == 'field_tabs') {
    foreach ($variables['items'] as $tab) {
      $titles[] = array_shift($tab['content']['#paragraph']->get('field_title')->getValue());
    }

    $variables['titles'] = $titles;
  }
}
